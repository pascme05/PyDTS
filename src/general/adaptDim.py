#######################################################################################################################
#######################################################################################################################
# Title:        PyDTS (Python Deep Timeseries Simulation)
# Topic:        Black-Box Modeling
# File:         adaptDim
# Date:         03.11.2023
# Author:       Dr. Pascal A. Schirmer
# Version:      V.0.1
# Copyright:    Pascal Schirmer
#######################################################################################################################
#######################################################################################################################

#######################################################################################################################
# Import libs
#######################################################################################################################
# ==============================================================================
# Internal
# ==============================================================================

# ==============================================================================
# External
# ==============================================================================


#######################################################################################################################
# Function
#######################################################################################################################
def adaptDim(X, y, setupPar):
    ###################################################################################################################
    # MSG IN
    ###################################################################################################################
    print("INFO: Adapting data dimension")

    ###################################################################################################################
    # Initialisation
    ###################################################################################################################
    # ==============================================================================
    # Parameters
    # ==============================================================================
    dim = X.shape

    ###################################################################################################################
    # Calculation
    ###################################################################################################################
    # ==============================================================================
    # Collapsing Dimension
    # ==============================================================================
    if X.ndim == 3 and setupPar['nDim'] == 2:
        Xout = X.reshape((dim[0], dim[1] * dim[2]))
        yout = y
    else:
        Xout = X
        yout = y

    ###################################################################################################################
    # Return
    ###################################################################################################################
    return [Xout, yout, dim]
